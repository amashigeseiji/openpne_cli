#desc:[github api]
github(){
  local baseurl="https://api.github.com"
  local target="repos"
  local repository="openpne/OpenPNE3"
  local filter='.'
  local option=
  local url curl json

  _getOptions $@
  if [ $# -gt 0 ];then
    case $1 in
      help) help;exit;;
    branch) branch;;
       tag) tag;;
      gist) shift && gist $@;;
    esac
  fi
  if [ $option ];then option='/'$option;fi

  url=${baseurl}'/'${target}'/'${repository}${option}

  json=$(getJson $url) && isNotFound $json;
  printf '%b\n' $json | jq "$filter"
}
getJson(){ #{{{
  local url=$1
  local curl="curl -s $url"
  eval $curl
} #}}}
help(){ #{{{
  printf '%b\n' ${yellow}'usage:'${color_off}
  printf '  %b\n' 'openpne github [args]'
  printf '%b\n'
  printf '%b\n' ${yellow}'args:'${color_off}
  printf '  %-10b' 'branch'
  printf '  %b\n' 'show repository branches.'
  printf '  %-10b' 'tag'
  printf '  %b\n' 'show repository tags.'
  printf '  %-10b' 'gist[repo]'
  printf '  %b\n' 'show gists.'
  printf '  %-10b' 'help'
  printf '  %b\n' 'show this help.'
  printf '\n'
  printf '%s\n' 'if you want to see another repository information,'
  printf '%s\n' 'you can assign repository like this:'
  printf '    %s\n' '--repository="amashigeseiji/openpne_cli"'
} #}}}
branch(){ #{{{
  option='branches'
  filter='.[].name'
} #}}}
tag(){ #{{{
  option='tags'
  filter='.[].name'
} #}}}
gist(){ #{{{
  _argumentRequired 'gist username' $1
  target='users'
  repository=$1
  option='gists'
  if [ ! $2 ];then
    filter='.[] | .files[].filename, .description'
  else
    filter='.[].files[].filename | contains("'$2'")'
  fi
} #}}}
isNotFound(){ #{{{
  local mes=`echo $@ | grep 'Not Found'`;
  if [ "$mes" ];then echo $mes | jq .message;exit;fi;
} #}}}
