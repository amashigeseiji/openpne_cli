#desc:[show installed OpenPNE]
argCheck(){
  target_dir=$1
  dir=`_isDir $1`
  case $? in
    0) return 0;;
    1) echo $dir' is not exist.';exit;;
    2) echo $dir' is not directory.';exit;;
  esac
}
show(){ #{{{
  local target_dir dir
  argCheck $1
  getBranch(){ cd $1 && if [ -e ./.git ];then git branch | grep '\*' | sed -e 's/\* //g' && return 0;else return 1;fi }
  local branch=
  if [ $target_dir ];then
    local baseUrl=$(_getBaseUrl ${dir})
    local dbname=$(_getDatabaseName ${dir})
    branch=$(getBranch ${dir})
    printf "  %b" "${green}name${color_off}:     $target_dir\n"
    printf "  %b" "${green}branch${color_off}:   $branch\n"
    printf "  %b" "${green}path${color_off}:     $dir\n"
    printf "  %b" "${green}base_url${color_off}: $baseUrl\n"
    printf "  %b" "${green}dbname${color_off}:   $dbname\n"
  else
    printf "${yellow}installed OpenPNE${color_off}\n"
    local -a installed_openpne=()
    for i in $(ls $installdir)
    do
      if [ $(ls ${installdir}/$i | grep -E ^symfony$) ];then
        installed_openpne=(${installed_openpne[@]} $i)
      fi
    done
    for i in ${installed_openpne[@]}
    do
      dir=$(_isDir $i)
      version=$(_getVersion ${dir})
      branch=$(getBranch ${dir})
      if [ -n "$branch" ];then
        printf '  %b\n' "${green}${i}${color_off}"
        printf "    version: $version\n"
        printf "    branch: $branch\n"
      else continue;
      fi
    done
  fi
} #}}}
