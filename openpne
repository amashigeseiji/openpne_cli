#!/bin/bash
# global parameter{{{
basedir="$HOME/.openpne"
conf_file="${basedir}/conf";
libdir="${basedir}/lib"
installdir="${basedir}/installed"
repository="${basedir}/repository/OpenPNE3.git"
command=
#color{{{
black="\033[30m"  #黒
red="\033[31m"  #赤
green="\033[32m"  #緑
yellow="\033[33m"  #黄
blue="\033[34m"  #青
purple="\033[35m"  #紫
cyan="\033[36m"  #水
color_off="\033[0m"
#}}}
source ${libdir}/common
#}}}
# functions{{{
# readConf{{{
readConf(){ cat ${conf_file} | sed '/^$/d' | grep -vE '^#'; }
#}}}
getCommand(){ #{{{
  if [ $# -gt 0 ];then
    for cmd in $( _getCommands )
    do
      if [ $cmd = $1 ];then
        echo $cmd;return 0;
      fi
    done
  fi

  echo 'command not found.';return 1
} #}}}
configure(){ #{{{
  if [ ! -e $conf_file ];then echo $conf_file' is not exist.';exit;fi

  getValue(){ local pattern=$1;echo `readConf | grep -vE '^_' | grep -E "(${pattern})" | awk '{print $2}'`;}

  local -a parameter=(`readConf | grep -vE '^_' | awk '{print $1}'`)

  for i in ${parameter[@]}
  do
    eval $i=`getValue $i`;
  done

  if [ ! -z ${prefix} ];then
    prefix=${prefix}'.'
  fi
  plugins=(`readConf | grep -E '^(_plugin)' | awk '{print $2}'`)
} #}}}
confCheck(){ #{{{
  local require_parameter=("publicdir" "server_domain" "dbms" "dbuser" "dbhost");
  for i in ${require_parameter[@]}
  do
    if [ ! `readConf | grep -E '^'$i | awk '{print $2}'` ];then echo 'please set '$i' to "'$conf_file'".';exit;fi
  done

  if [ ! -e $installdir -o ! -d $installdir ];then echo 'installdir: '$installdir' is not exist.';exit;fi
  if [ ! -e $publicdir -o ! -d $publicdir ];then echo 'publicdir: '$publicdir' is not exist.';exit;fi
} #}}}
setup(){ #{{{
  configure;
  local ret=
  ret=`getCommand $@`
  if [ $? -ne 0 ];then echo $ret;exit;
  else command=$ret
  fi
  confCheck
} #}}}
execute(){ #{{{
  source ${libdir}'/'${command}
  case $command in
    *)
      shift && eval $command $@;
      return 0;;
  esac
} #}}}
#}}}
setup $@
execute $@
# vim: set foldmethod=marker:
